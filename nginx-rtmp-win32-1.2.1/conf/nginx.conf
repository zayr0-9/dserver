worker_processes  1;

error_log  logs/error.log debug;

events {
    worker_connections  1024;
}

rtmp {
    server {
        listen 1935;

        application live {
            live on;
            hls on;  # Enable HLS for the live stream
            hls_path D:/temphls;  # Ensure this path exists
            hls_fragment 4s;  # Set the fragment length
            hls_playlist_length 6s;  # Set the playlist length
            record off;  # Disable recording (optional)
        }
		
        application hls {
            live on;
            hls on;  
            hls_path temp/hls;  
            hls_fragment 8s;  
        }
    }
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    client_body_timeout 300;
    client_header_timeout 300;
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    server_tokens   off;
    keepalive_timeout  65;
    error_log logs/error.log debug;
    types_hash_max_size 2048;


  #change to your own servers IP
    upstream django_server {
        server 192.168.0.82:8000;  # Waitress will run on port 8000
    }

    server {
        listen       80;
        # listen 443 ssl http2;
        server_name  localhost;


        # Serve static files
        location /static/ {
            # alias C:/Users/rajka/Desktop/projects/dserver/filetransfer/static/;
            alias C:/Users/rajka/Desktop/projects/dserver/frontend/build/static/;
        }

        location /django_static/ {
    alias C:/Users/rajka/Desktop/projects/dserver/filetransfer/static/;
}

         location /api/ {
            proxy_pass http://django_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            client_max_body_size 1000M;  # Increase maximum allowed request size
            proxy_read_timeout 1200s;    # Set proxy read timeout to 1200 seconds
            proxy_send_timeout 1200s;    # Set proxy send timeout to 1200 seconds
            proxy_buffering off;         # Disable buffering for better streaming performance
        }

        # Serve media files
        location /media/ {
            alias C:/Users/rajka/Desktop/projects/dserver/filetransfer/static/media/;
        }
        # Serve HLS (HTTP Live Streaming)
        # location /hls {
        #     types {
        #         application/vnd.apple.mpegurl m3u8;
        #         video/mp2t ts;
        #     }
        #     alias D:/temphls;  # HLS output directory
        #     add_header Cache-Control no-cache;
        # }
        # location /thumbnails/ {
        #     alias D:/serverthumb/;  # Update this with the actual path to your thumbnails directory
        #     autoindex on;  # Optional: allow directory listing if needed
        # }

        # Serve downloads directly
        # Include the dynamically generated configuration
        include dynamic_drives.conf;
       
            # Serve HLS playlists and segments
    


       

        # # Proxy other requests to Django application
        # location / {
        #     proxy_pass http://django_server;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_redirect off;

        #     client_max_body_size 1000M;  # Increase maximum allowed request size
        #     proxy_read_timeout 1200s;  # Set proxy read timeout to 1200 seconds
        #     proxy_send_timeout 1200s;  # Set proxy send timeout to 1200 seconds
        #     proxy_buffering off;  # Disable buffering for better streaming performance
        # }
        location / {
        root C:/Users/rajka/Desktop/projects/dserver/frontend/build/;
        try_files $uri /index.html;
    }
        # Proxy WebSocket connections to Node.js (for real-time updates)
        location /socket.io/ {
        proxy_pass http://127.0.0.1:3000;  # Node.js runs on port 3000
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    }
}
